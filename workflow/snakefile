import os
import yaml
from yaml import Loader
import json
import re


def host_loader(loader,node):
    fields = loader.construct_mapping(node,deep=True)
    options=fields['options']
    # print([options[name] for name in options.keys()])
    ret_opt = [name for name in options.keys() if os.path.exists(options[name])]
    # print(ret_opt)
    return ret_opt[0]


def dep_loader(loader,node):
    options = loader.construct_mapping(node,deep=True)
    host = options['host']
    pref = options['pref']
    # print(pref)
    host =options['host']
    path = options['path']
    full_path = pref+path[host] if pref is not None else path[host]
    return full_path

yaml.Loader.add_constructor('!Host', host_loader)
yaml.Loader.add_constructor('!Dep', dep_loader)

with open("../workflow/config_base.yaml") as stream:
    config=yaml.load(stream,Loader=Loader)

config_d = config['paths']
host = config['host']
samplen = {'gardner': 10000, 'desktop': 100}
n_cvrt = {'gardner': 10, 'desktop': 1}
config_e = config['envs']
shell.prefix(config_e['cmd_prefix'])

wildcard_constraints:
    h2="[+-]?[0-9]+\.[0-9]+",
    samplesize="\d+",
    chrom="\d+",
    traitid="[^_]+",
    trait="[0-9]+",
    sp="[01][05]",
    source="[^/]+",
    model="[^/]+",
    ps="[^_]+"

#      chrom="\d+",
#      gwas="[fgdptb]+",
#      new_base="[a-z]+",
#      region_id="\d+"
genome_chr=range(1,23)


ldc = 10
h2r = [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8]
ntr = range(1,11)
include: "ukb_snakefile"

include: "rssp_snakefile"
#include: "ukb_gwas_snakefile"
#localrules: cat_grm_bin,cat_filefo,cat_filefp,cat_fileio,cat_fileipo,bgensplit_inp


# 
# print(all_ukb_traits[0:10])
#expand(config_d["UKB_PED"]+"chr{chrom}_"+config_d["SAMPLEN"]+"_01.bgen",chrom=genome_chr)

#all_ukb_traits,= glob_wildcards(config_d["UKB_GWAS"]+"{trait}_irnt.gwas.imputed_v3.both_sexes.tsv.bgz")
#expand("results/sim_ukb_{ip}/{model}_{nt}_05_{h2}_{samplesize}.int.log",ip=["ind","panel"],model=["polym"],h2=h2r,nt=ntr,samplesize="10000"),
rule all:
    input:
        expand("results/sim_ukb_{ip}/{model}_{nt}_05_{h2}_{samplesize}.noshrink.RDS",model=["polym"],nt=ntr,samplesize="10000",h2=h2r,ip=["ind","panel"]),
        expand("results/sim_ukb_ind/{model}_{nt}_05_{h2}_{samplesize}.hsq",model=["polym"],h2=h2r,nt=ntr,samplesize="10000")
        # expand("results/sim_ukb_{ip}/{model}_{nt}_10_{h2}_{samplesize}.noint.log",ip=["ind","panel"],model=["polym"],h2=h2r,nt=ntr,samplesize="10000"),


        #expand(config_d["GWAS"]+"pheno/{model}_{h2}_{trait}_10_{samplesize}.1.causals",model=["poly"],trait=range(1,11),h2=[0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8],nt=[n_cvrt[host]],samplesize=[samplen[host]])

        #
        #expand(config_d["GWAS"]+"gwas_covar_fl_panel/onec_{h2}_{nt}_10_10000",
