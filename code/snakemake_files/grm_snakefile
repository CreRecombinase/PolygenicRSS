shell.executable("/bin/bash")


rule gen_pheno_gcta:
    input:
        phenof=config["KG_DIRECTORY"]+"RSSp_sim_gwas_pheno/{subset}_{sub}_{scen}_trait.h5",
        grmidbin=config["PLINK_DIR"]+"{subset}_19.grm.id"
    output:
        phenof=temp(config["KG_DIRECTORY"]+"RSSp_sim_gwas_pheno/{subset}_{sub}_{scen}_trait.pheno")
    script:
        "../scripts/pheno2gctapheno.R"
        
rule gcta_h2:
    input:
        grmbin=config["PLINK_DIR"]+"{subset}_19.grm.bin",
        phenof=config["KG_DIRECTORY"]+"RSSp_sim_gwas_pheno/{subset}_{sub}_{scen}_trait.pheno"
    params:
        grm_pref=config["PLINK_DIR"]+"{subset}_19",
        out_pref=config["PLINK_DIR"]+"gcta_h2_est/{subset}_seq_{sub}_{scen}_{gene}_est",
        gene="{gene}"
    threads: 9
    output:
        out_f=temp(config["PLINK_DIR"]+"gcta_h2_est/{subset}_seq_{sub}_{scen}_{gene}_est.hsq")
    shell:
        "gcta64 --reml --grm {params.grm_pref} --pheno {input.phenof} --mpheno {params.gene} --out {params.out_pref} --thread-num {threads}"
    

        
rule summarize_gcta:
    input:
        in_f=expand(config["PLINK_DIR"]+"gcta_h2_est/{{subset}}_seq_{{sub}}_{{scen}}_{gene}_est.hsq",gene=FGENEID)
    params:
        gene=FGENEID
    output:
        out_f=config["OUTPUT_DIR"]+"gcta_h2_est/{subset}_seq_{sub}_{scen}_est.txt"
    script:
        "../scripts/summarise_gcta.R"

