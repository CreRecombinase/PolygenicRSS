

rule ldsc_trait_chunk:
    input:
        evdf=config["KG_DIRECTORY"]+"EVD_H5/{subset}_{sub}_hapmap.h5"
    output:
        outf =expand(config["KG_DIRECTORY"]+"eur_w_ld_chr_{{subset}}_{{sub}}/{chrom}.l2.ldscore.gz",chrom=range(1,23)),
        soutf=expand(config["KG_DIRECTORY"]+"eur_w_ld_chr_{{subset}}_{{sub}}/{chrom}.l2.M_5_50",chrom=range(1,23))
    script:
        "../scripts/ldsc_trait_chunk.R"        

        
rule prep_ldsc_uh:
    input:
        rdsf=config["KG_DIRECTORY"]+"RSSp_genome_{gwas}_uh/{subset}_{sub}_{scen}_sim.h5"
    params:
        fgeneid=FGENEID
    output: ldscf=temp(expand(config["KG_DIRECTORY"]+"ldsc_sim_{{gwas}}_genome/{{subset}}_{{sub}}_sim_{fgeneid}_uh_{{scen}}.txt",fgeneid=FGENEID))
    script:
        "../scripts/prep_ldsc_uh.R"


        
rule ldsc_trait_est:
    input:
        ldsc_f="ldsc/ldsc.py",
        sumstatf=config["KG_DIRECTORY"]+"ldsc_sim_{gwas}_genome/{subset}_{sub}_sim_{fgeneid}_uh_{scen}.txt",
        chroml2=expand(config["KG_DIRECTORY"]+"eur_w_ld_chr_{{subset}}_{{sub}}/{chrom}.l2.ldscore.gz",chrom=range(1,23)),
        soutf=expand(config["KG_DIRECTORY"]+"eur_w_ld_chr_{{subset}}_{{sub}}/{chrom}.l2.M_5_50",chrom=range(1,23))
    params:
        out_pref=config["KG_DIRECTORY"]+"ldsc_est_{gwas}_genome/est_{subset}_{sub}_sim_{fgeneid}_{scen}",
        ld_dir=config["KG_DIRECTORY"]+"eur_w_ld_chr_{subset}_{sub}/"
    output:
        logf=temp(config["KG_DIRECTORY"]+"ldsc_est_{gwas}_genome/est_{subset}_{sub}_sim_{fgeneid}_{scen}.log")
    conda:
        "envs/ldpred.yml"
    shell:
        "python2 ./ldsc/ldsc.py --h2 {input.sumstatf} --ref-ld-chr {params.ld_dir} --w-ld-chr {params.ld_dir} --out {params.out_pref}"
         


rule ldsc_trait_parse:
    input:
        logf=expand(config["KG_DIRECTORY"]+"ldsc_est_{{gwas}}_genome/est_{{subset}}_{{sub}}_sim_{fgeneid}_{{scen}}.log",fgeneid=FGENEID)
    output:
        logf=config["OUTPUT_DIR"]+"sim_{subset}_{sub}_{gwas}_ldsc_res_{scen}.txt.gz"
    params:
        fgeneid=expand("{fgeneid}",fgeneid=FGENEID)
    script:
        "../scripts/parse_ldsc.R"                
                
        

rule get_ldsc:
    output:
        "ldsc/ldsc.py"
    shell:
        "git clone https://github.com/bulik/ldsc.git"
                      

