# # import pandas as pd

rule merge_temp_dose:
    input:
        dosef_1="/gpfs/data/xhe-lab/ncbi_2/dbGaP-17426/files/phg000679.v1.FHS_SHARe_Imputed_1000G.genotype-imputed-data.c1/machout.chr{chrom}.dose_GRU.gz",
        dosef_2="/gpfs/data/xhe-lab/ncbi_2/dbGaP-17426/files/phg000679.v1.FHS_SHARe_Imputed_1000G.genotype-imputed-data.c2/machout.chr{chrom}.dose_NPU.gz",
        infof="/gpfs/data/xhe-lab/ncbi_2/dbGaP-17426/files/phg000679.v1.FHS_SHARe_Imputed_1000G.genotype-imputed-data.c1/imputed-metrics/machout.chr{chrom}.info.gz"
    output:
        infof=temp(config["KG_DIRECTORY"]+"merged_dose/{chrom}/imputed-metrics/machout.chr{chrom}.info.gz"),
        dosef=temp(config["KG_DIRECTORY"]+"merged_dose/{chrom}/machout.dose.gz")
    shell:
        "cat {input.dosef_1} {input.dosef_2} > {output.dosef}; cp {input.infof} {output.infof}"

rule gcta2bed:
    conda:
        "envs/rssp.yml"
    input:
        infof=config["KG_DIRECTORY"]+"merged_dose/{chrom}/imputed-metrics/machout.chr{chrom}.info.gz",
        dosef=config["KG_DIRECTORY"]+"split_dose/chr{chrom}.dose_{sl}.gz"
    params:
        pref=config["KG_DIRECTORY"]+"split_bed/chr{chrom}.dose_{sl}"
    output:
        famf=temp(config["KG_DIRECTORY"]+"split_bed/chr{chrom}.dose_{sl}.fam"),
        bimf=temp(config["KG_DIRECTORY"]+"split_bed/chr{chrom}.dose_{sl}.bim"),
        bedf=temp(config["KG_DIRECTORY"]+"split_bed/chr{chrom}.dose_{sl}.bed")
    shell:
        "gcta64 --thread-num {threads} --dosage-mach-gz {input.dosef} {input.infof} --make-bed --out {params.pref}"


rule split_dose_gz:
    input:
        dosef=config["KG_DIRECTORY"]+"merged_dose/{chrom}/machout.dose.gz"
    params:
        line_no="500",
        out_pref=config["KG_DIRECTORY"]+"split_dose/chr{chrom}.dose"
    output:
        dosef=temp(expand(config["KG_DIRECTORY"]+"split_dose/chr{{chrom}}.dose_{sl}.gz",sl=range(1,15)))
    shell:
        "../scripts/split_gz.pl {input.dosef} {params.out_pref} {params.line_no}"

rule missing_f:
    input:
        bimf="/gpfs/data/xhe-lab/ncbi_2/dbGaP-17426/files/phg000679.v1.FHS_SHARe_Imputed_1000G.genotype-imputed-data.c1/imputed-metrics/machout.chr{chrom}.info.gz"
    output:
        outf=temp(config["KG_DIRECTORY"]+"split_bed/missing/chr{chrom}.txt")
    shell:"""
    zcat {input.bimf} | awk '$2==$3 {{print $1}}' > {output.outf}
    """

rule remove_monoall:
    conda:
        "envs/rssp.yml"
    input:
        famf=config["KG_DIRECTORY"]+"split_bed/chr{chrom}.dose_{sl}.fam",
        bimf=config["KG_DIRECTORY"]+"split_bed/chr{chrom}.dose_{sl}.bim",
        bedf=config["KG_DIRECTORY"]+"split_bed/chr{chrom}.dose_{sl}.bed",
        badf=config["KG_DIRECTORY"]+"split_bed/missing/chr{chrom}.txt"
    params:
        in_pref=config["KG_DIRECTORY"]+"split_bed/chr{chrom}.dose_{sl}",
        out_pref=config["KG_DIRECTORY"]+"split_bed/nodup/chr{chrom}.dose_{sl}"
    output:
        famf=temp(config["KG_DIRECTORY"]+"split_bed/nodup/chr{chrom}.dose_{sl}.fam"),
        bimf=temp(config["KG_DIRECTORY"]+"split_bed/nodup/chr{chrom}.dose_{sl}.bim"),
        bedf=temp(config["KG_DIRECTORY"]+"split_bed/nodup/chr{chrom}.dose_{sl}.bed"),
        nosf=temp(config["KG_DIRECTORY"]+"split_bed/nodup/chr{chrom}.dose_{sl}.nosex"),
        logf=temp(config["KG_DIRECTORY"]+"split_bed/nodup/chr{chrom}.dose_{sl}.log")
    shell:
        "plink --bfile {params.in_pref} --exclude {input.badf} --make-bed --out {params.out_pref}"

rule gen_merge_f:
    input:
        famf=expand("/scratch/t.cri.nknoblauch/polyg_scratch/split_bed/nodup/chr{{chrom}}.dose_{sl}.fam",sl=range(1,15)),
        bimf=expand("/scratch/t.cri.nknoblauch/polyg_scratch/split_bed/nodup/chr{{chrom}}.dose_{sl}.bim",sl=range(1,15)),
        bedf=expand("/scratch/t.cri.nknoblauch/polyg_scratch/split_bed/nodup/chr{{chrom}}.dose_{sl}.bed",sl=range(1,15))
    params:
        in_pref=expand("/scratch/t.cri.nknoblauch/polyg_scratch/split_bed/nodup/chr{{chrom}}.dose_{sl}",sl=range(1,15)),
        chrom="{chrom}"
    output:
        temp("merge_f_{chrom}.txt")
    run:
        with open(output[0],"w") as out:
            for f in params.in_pref[1:]:
                out.write(f.format(chrom=params.chrom)+"\n")


rule merge_plink:
    conda:
        "envs/rssp.yml"
    input:
        famf=expand(config["KG_DIRECTORY"]+"split_bed/nodup/chr{{chrom}}.dose_{sl}.fam",sl=range(1,15)),
        bimf=expand(config["KG_DIRECTORY"]+"split_bed/nodup/chr{{chrom}}.dose_{sl}.bim",sl=range(1,15)),
        bedf=expand(config["KG_DIRECTORY"]+"split_bed/nodup/chr{{chrom}}.dose_{sl}.bed",sl=range(1,15)),
        mergef="merge_f_{chrom}.txt"
    params:
        out_pref=config["KG_DIRECTORY"]+"temp_bed/chr{chrom}.dose",
        in_pref=config["KG_DIRECTORY"]+"split_bed/nodup/chr{chrom}.dose_1"
    output:
        famf=temp(config["KG_DIRECTORY"]+"temp_bed/chr{chrom}.dose.fam"),
        bimf=temp(config["KG_DIRECTORY"]+"temp_bed/chr{chrom}.dose.bim"),
        bedf=temp(config["KG_DIRECTORY"]+"temp_bed/chr{chrom}.dose.bed")
    threads:
        12
    shell:
        "plink --bfile {params.in_pref} --merge-list {input.mergef} --make-bed --out {params.out_pref} --threads {threads}"

rule sort_plink:
    conda:
        "envs/rssp.yml"
    input:
        famf=config["KG_DIRECTORY"]+"temp_bed/chr{chrom}.dose.fam",
        bimf=config["KG_DIRECTORY"]+"temp_bed/sorted_chr{chrom}.dose.bim",
        bedf=config["KG_DIRECTORY"]+"temp_bed/chr{chrom}.dose.bed"
    params:
        in_pref=config["KG_DIRECTORY"]+"bed/chr{chrom}.dose",
        out_pref=config["PLINK_DIR"]+"FRAM/FRAM.chr{chrom}",
    output:
        famf=config["PLINK_DIR"]+"FRAM/FRAM.chr{chrom}.fam",
        bim=config["PLINK_DIR"]+"FRAM/FRAM.chr{chrom}.bim",
        bedf=config["PLINK_DIR"]+"FRAM/FRAM.chr{chrom}.bed"
    shell:
        "plink --bed {input.bedf} --bim {input.bimf} --fam {input.famf} --make-bed --out {params.out_pref} --threads {threads}"



rule fix_bim:
    input:
        inf=config["KG_DIRECTORY"]+"temp_bed/chr{chrom}.dose.bim"
    params:
        chrom="{chrom}"
    output:
        outf=config["KG_DIRECTORY"]+"temp_bed/sorted_chr{chrom}.dose.bim"
    script:
        "../scripts/fix_bim.R"

rule count_n_chr:
    input:
        config["FRAM_DIR"]+"machout.chr22.dose_GRU.gz"
    output:
        config["FRAM_DIR"]+"all_ind_GRU.txt"
    shell:
        "zcat {input} |cut -f 1 >{output}"

rule fram_exp_h5:
    input:
        off_expf_c1 = "/gpfs/data/xhe-lab/ncbi_2/dbGaP-17426/files/phe000002.v6.FHS_SABRe_project3.expression-data-matrixfmt.c1/FinalFile_Gene_OFF_2446_Adjusted_c1.txt.gz",
        off_expf_c2 = "/gpfs/data/xhe-lab/ncbi_2/dbGaP-17426/files/phe000002.v6.FHS_SABRe_project3.expression-data-matrixfmt.c2/FinalFile_Gene_OFF_2446_Adjusted_c2.txt.gz",
        gen3_expf_c1 = "/gpfs/data/xhe-lab/ncbi_2/dbGaP-17426/files/phe000002.v6.FHS_SABRe_project3.expression-data-matrixfmt.c1/Final_Gene_GENIII_3180_c1.txt.gz",
        gen3_expf_c2 = "/gpfs/data/xhe-lab/ncbi_2/dbGaP-17426/files/phe000002.v6.FHS_SABRe_project3.expression-data-matrixfmt.c2/Final_Gene_GENIII_3180_c2.txt.gz",
        expif= "/gpfs/data/xhe-lab/ncbi_2/dbGaP-17426/files/phe000002.v6.FHS_SABRe_project3.sample-info.MULTI/phe000002.v6_release_manifest.txt",
        snpif = "/gpfs/data/xhe-lab/ncbi_2/dbGaP-17426/files/phg000679.v1.FHS_SHARe_Imputed_1000G.sample-info.MULTI/phg000679.v1_release_manifest.txt",
        expinfof = "/group/im-lab/nas40t2/Data/dbGaP/Transcriptome/Framingham/keston-analysis/HuEx-1_0-st-v2.na35.hg19.transcript_fixed.csv"
    output:
        h5f=config["KG_DIRECTORY"]+"trait/fram_exp.h5",
        sample_list=config["FRAM_DIR"]+"all_ind_NPU_GRU.txt"
    script:
        "../scripts/exp2h5.R"

rule fram_cov_h5:
    input:
        expf= "/group/im-lab/nas40t2/Data/dbGaP/Transcriptome/Framingham/keston-analysis/mRNA_matrixeqtl_COV_P40.txt",
        sample_list=config["FRAM_DIR"]+"all_ind_NPU_GRU.txt"
    output:
        h5f=config["KG_DIRECTORY"]+"covardata/fram_covar.h5"
    script:
        "../scripts/cov2h5.R"
