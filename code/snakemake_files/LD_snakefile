rule ld_chunk_1kg:
    input:
        hdff=config["HDF5_DIR"]+"ALL_{dataset}_geno.h5",
        subsnpf=config["INPUT_DIR"]+"{snpset}.txt.gz",
        bdf=config["INPUT_DIR"]+"ldetect_{bdf}.txt.gz",
        mapf=config["KG_MAPDIR"]+"interpolated_hapmap.h5"
    output:
        evdf=config["EVD_DIR"]+"{snpset}_{dataset}_{bdf}_hapmap.h5"
    script:
        "../scripts/evd_1kg_h5.R"

rule ldetect_gen:
    input:
        ldetectf=config["LDETECT_BREAK_FILE"]
    params:
        allchr="T"
    output:
        bdf=config["INPUT_DIR"]+"ldetect_T.txt.gz"
    script:
        "../scripts/break_df.R"

rule ldetect_chr:
    input:
        ldetectf=config["LDETECT_BREAK_FILE"]
    params:
        allchr="F"
    output:
        bdf=config["INPUT_DIR"]+"ldetect_F.txt.gz"
    script:
        "../scripts/break_df.R"


rule dl_map_h5:
    output:
        expand(config["KG_MAPDIR"]+"interpolated_from_hapmap/chr{chrom}.interpolated_genetic_map.gz",chrom=range(1,23))
    params:
        gdir=config["KG_MAPDIR"]
    shell:
        "git clone https://github.com/CreRecombinase/1000-genomes-genetic-maps {params.gdir}"


rule gen_map_h5:
    input:
        mapf=expand(config["KG_MAPDIR"]+"interpolated_from_hapmap/chr{chrom}.interpolated_genetic_map.gz",chrom=range(1,23))
    params:
        chrom=range(1,23)
    output:
        mapf=config["KG_MAPDIR"]+"interpolated_hapmap.h5"
    script:
        "../scripts/map2RDS.R"


rule vcf_2_clean:
    input:
        vcff=config["VCF_DIR"]+"ALL.chr{chr}.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz",
        filt_f="EUR.samples"
    params:
        out_pref=config["VCF_DIR"]+"EUR.chr{chr}_maf_01.vcf.gz"
    output:
        vcff=config["VCF_DIR"]+"EUR.chr{chr}_maf_01.vcf.gz"
    threads: 2
    shell:
        "bcftools view {input.vcff} -Oz -o {params.out_pref} -S {input.filt_f} --min-alleles 2 --max-alleles 2 --min-af 0.01 --threads {threads}"

rule vcf_2_allel:
    input:
        vcff=config["VCF_DIR"]+"EUR.chr{chr}_maf_01.vcf.gz"
    output:
        legf=config["VCF_DIR"]+"../impute/EUR.chr{chr}.h5"
    threads: 1
    conda:
        "envs/rssp.yml"
    script:
        "../scripts/vcf2allel.py"


rule allel2haplotype:
    input:
        legf=config["VCF_DIR"]+"../impute/EUR.chr{chr}.h5"
    output:
        h5f=config["HDF5_DIR"]+"1KG{chr}_seq_1kg_geno.h5"
    script:
        "../scripts/allel2haplo_h5.R"

