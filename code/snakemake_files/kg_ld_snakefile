rule vcf_2_pop:
    input:
        vcff=config["VCF_DIR"]+"ALL.chr{chr}.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz",
        filt_f="{pop}.samples"
    output:
        vcff=config["VCF_DIR"]+"{pop}/{pop}.chr{chr}.vcf.gz"
    wildcard_constraints:
        pop="[A-Z]+",
        chr="[0-9]+"
    shell:
        "bcftools view {input.vcff} -ghet -a -m2 -M2 -S {input.filt_f} -X -Oz -o {output.vcff} --threads {threads}"

rule tabix_pop:
    input:
        vcff=config["VCF_DIR"]+"{pop}/{pop}.chr{chr}.vcf.gz"
    output:
        config["VCF_DIR"]+"{pop}/{pop}.chr{chr}.vcf.gz.tbi"
    shell:
         "tabix {input}"

rule snplist_vcf:
    input:
        vcff=config["VCF_DIR"]+"{pop}/{pop}.chr{chr}.vcf.gz"
    output:
        snplistf=config["VCF_DIR"]+"{pop}/snplist/{pop}.chr{chr}.txt"
    shell:
        "bcftools view -H -ghet -G -m2 -M2 {input.vcff} > {output.snplistf}"

rule tsv2fst:
    input:
        gwasf=config["KG_DIRECTORY"]+"summary_statistics/{consortia}_{trait}_summary_statistics.tsv.gz"
    output:
        gwasf=config["KG_DIRECTORY"]+"summary_statistics_fst/{consortia}_{trait}_summary_statistics.fst"
    script:
        "../scripts/tsv2fst.R"

rule merge_snplist:
    input:
        gwasf=config["KG_DIRECTORY"]+"summary_statistics_fst/{consortia}_{trait}_summary_statistics.fst",
        vcff=expand(config["VCF_DIR"]+"{{pop}}/snplist/{{pop}}.chr{chrom}.txt",chrom=range(1,23)),
        mapf=config["KG_MAPDIR"]+"interpolated_{pop}.h5"
    output:
        outputf=expand(config["VCF_DIR"]+"snplist/{{consortia}}/{{trait}}_{{pop}}.chr{chrom}.fst",chrom=range(1,23))
    script:
        "../scripts/merge_snplist.R"


rule pull_pop_list:
    input:
        panel_file=config["INPUT_DIR"]+"integrated_call_samples_v3.20130502.ALL.panel"
    output:
        pop_list="{pop}.samples"
    params:
        pop="{pop}"
    script:
        "../scripts/pop_pull.R"






rule split_inpf:
    input:
        inputf=config["VCF_DIR"]+"snplist/{consortia}/{trait}_{pop}.chr{chrom}.fst",
        ldetectf=config["LDETECT_DIR"]+"fourier_ls-chr{chrom}.bed"
    params:
        chunks=expand("{clusterid}",clusterid=range(1,tot_chunk)),
        useLDetect="{useLDetect}",
        consortia="{consortia}",
        trait="{trait}",
        pop="{pop}",
        chrom="{chrom}"
    output:
        outf_tf=expand(config["VCF_DIR"]+"chunk_snplist/{{consortia}}/{{trait}}_{{pop}}_{{useLDetect}}.chr{{chrom}}.{clusterid}.chunked.fst",clusterid=range(1,tot_chunk))
    script:
        "../scripts/merge_split.R"


rule evd_ld_kg:
    input:
        subsnpf = config["VCF_DIR"]+"chunk_snplist/{consortia}/{trait}_{pop}_{useLDetect}.chr{chrom}.{rid}.chunked.fst",
        input_file = config["HDF5_DIR"]+"{pop}/{pop}.chr{chrom}.h5"
    params:
        useLDshrink = "{useLDshrink}",
    output:
        evdf = config["EVD_DIR"]+"chr{chrom}AF0SNP0N0_{consortia}O{trait}_{pop}_{useLDetect}_{pop}_{useLDshrink}.{rid}.clust.h5"
    script:
        "../scripts/evd_1kg_h5_al.R"


# rule evd_ld_kg:
#     input:
#         subsnpf = config["VCF_DIR"]+"chunk_snplist/{consortia}/{trait}_{pop}_{useLDetect}.chr{chrom}.{rid}.chunked.fst",
#         input_file = config["VCF_DIR"]+"{pop}/{pop}.chr{chrom}.vcf.gz",
#         input_file_idx = config["VCF_DIR"]+"{pop}/{pop}.chr{chrom}.vcf.gz.tbi",
#     params:
#         useLDshrink = "{useLDshrink}",
#     output:
#         evdf = config["EVD_DIR"]+"chr{chrom}AF0SNP0N0_{consortia}O{trait}_{pop}_{useLDetect}_{pop}_{useLDshrink}.{rid}.clust.h5"
#     script:
#         "../scripts/evd_1kg_vcf_pc.R"

rule merge_ld:
    input:
        evdfl=expand(config["EVD_DIR"]+"chr{{chrom}}AF0SNP0N0_{{consortia}}O{{trait}}_{{pop}}_{{useLDetect}}_{{pop}}_{{useLDshrink}}.{rid}.clust.h5",rid=range(1,tot_chunk))
    output:
        evdf=config["EVD_DIR"]+"chr{chrom}AF0SNP0N0_{consortia}O{trait}_{pop}_{useLDetect}_{pop}_{useLDshrink}.h5"
    script:
        "../scripts/merge_evd.R"
