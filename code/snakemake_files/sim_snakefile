rule subsnp_chr:
    ''' Subset SNPs according to which chromosomes you want in the simulation, and what Allele Frequency
 cutoff you want to use '''
    input:
        gdsf_a=config["HDF5_DIR"]+"ALL_{dataset}_geno.h5",
        ldetectf=config["LDETECT_BREAK_FILE"],
        gdsf_b=config["HDF5_DIR"]+"ALL_{panel_dataset}_geno.h5"
    params:
        AF="{AF}",
        SNPCT="{SNPCT}",
        N="{N}"
    output:
        outf_a=config["INPUT_DIR"]+"chr{chrom}AF{AF}SNP{SNPCT}N{N}_{dataset}_{panel_dataset}_trait.txt.gz",
        outf_b=config["INPUT_DIR"]+"chr{chrom}AF{AF}SNP{SNPCT}N{N}_{dataset}_{panel_dataset}_LD.txt.gz",
        ldo=config["INPUT_DIR"]+"chr{chrom}AF{AF}SNP{SNPCT}N{N}_{dataset}_{panel_dataset}_LD.RDS",
        gwaso=config["INPUT_DIR"]+"chr{chrom}AF{AF}SNP{SNPCT}N{N}_{dataset}_{panel_dataset}_gwas.RDS"
    script:
        "../scripts/subset_snp_chr.R"


rule sim_pheno_RSSp:
    ''' This rule works very similarly to sim_pheno_w_Beta_RSSp, but doesn't require beta,
    and instead generates it on the fly.  This is the rule used in LD score regression/RSSp
    comparisons
        '''
    input:
        gdsf=config["HDF5_DIR"]+"ALL_{dataset}_geno.h5",
        subsnpf=config["INPUT_DIR"]+"chr{chrom}AF{AF}SNP{SNPCT}N{N}_{dataset}_{panel_dataset}_trait.txt.gz",
        subgwasf=config["INPUT_DIR"]+"chr{chrom}AF{AF}SNP{SNPCT}N{N}_{dataset}_{panel_dataset}_gwas.RDS"
    params:
        fgeneid=expand("{fgeneid}",fgeneid=FGENEID),
        pve=PVE,
        bias=BIAS,
        nreps=NREPS
    output:
        h5f=config["KG_DIRECTORY"]+"pheno/chr{chrom}AF{AF}SNP{SNPCT}N{N}_{dataset}_{panel_dataset}_{scenario}_trait.h5",
        beta_hf=config["KG_DIRECTORY"]+"beta/chr{chrom}AF{AF}SNP{SNPCT}N{N}_{dataset}_{panel_dataset}_{scenario}_beta.h5"
    resources:
        fh5=1
    script:
        "../scripts/gen_ty_block_RSSp.R"
