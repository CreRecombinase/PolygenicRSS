include: "../parameter_generation/Snakefile"
gardner_dir="../../../../../../../../group/xhe-lab/1KG/"
if os.path.exists(gardner_dir):
    configpath="../workflow_params_gardner.json"
else:
    configpath="../workflow_params.json"
include: "../parameter_generation/Snakefile"
gardner_dir="../../../../../../../../group/xhe-lab/1KG/"
rcc_dir="../../../../../../../project/xinhe/eQTL/1kg/"
if os.path.exists(gardner_dir):
    configpath="../workflow_params_gardner.json"
else:
    if os.path.exists(rcc_dir):
        configpath="../workflow_params_rcc.json"
    else:
        if os.path.exists("../../../../Desktop/im_xps13"):
            configpath="../workflow_params_xps.json"
        else:
            configpath="../workflow_params.json"    
    
configfile:
    configpath


config = {key: "../"+value for (key,value) in config.items()}   


rule all:
    input:
        config["OUTPUT_DIR"]+"sim_{subseta}_{gwas}_RSSp_res_{sub}_{scen}.txt.gz".format(subseta=COMB_NAME,gwas="gwas",sub="wtcc",scen=SCEN)


rule gen_quh:
    input:
        evdf=config["KG_DIRECTORY"]+"EVD_H5/{subseta}_{sub}_hapmap.h5",
        uhf=config["KG_DIRECTORY"]+"RSSp_genome_gwas_uh/{subseta}_{sub}_{scen}_sim.h5"
    output:
        quhf=config["KG_DIRECTORY"]+"RSSp_genome_gwas_quh_chunk/{subseta}_{sub}_{scen}_sim.h5"
    script:
        "../../scripts/gen_quh_chunk_h5.R"

rule RSSp_est:
    input:
        rdsf=config["KG_DIRECTORY"]+"RSSp_genome_{gwas}_quh_chunk/{subseta}_{sub}_{scen}_sim.h5"
    output:
        dff=config["OUTPUT_DIR"]+"sim_{subseta}_{gwas}_RSSp_res_{sub}_{scen}.txt.gz"
    script:
        "../../scripts/RSSp_est.R"
