

rule subset_gds:
    ''' This rule creates the gds file that will be used by most of the subsequent rules, It should be somewhere on RCC or gardner, and shouldn't have to be re-run'''
    input:
        mapf=KG_dir+"1000-genomes-genetic-maps/interpolated_hapmap.RDS",
        temp_gds=expand(KG_dir+"gds/ALL.chr{chr}.gds",chr=range(1,23)),
        geno_gdsf=expand(KG_dir+"gds/ALL.chr{chr}_geno.gds",chr=range(1,23)),
        breakf=LD_break_file
    output:
        gdsf=MGDS_DIR+"ALL_seq_hapmap.gds",
        geno_gdsf=MGDS_DIR+"ALL_seq_hapmap_geno.gds"#,       proff=PROF_DIR+"gds_subset.prof",
    threads: 1
    script:
        "../scripts/gds_subset.R"


rule subset_wtcc_h5:
    ''' This rule creates the reference panel HDF5 file from WTCC data'''
    input:
        input_h5=WTCC_H5_DIR+"../wtcc_input/{gn}_geno.h5",
        breakf=LD_break_file


rule impute_2_snpgds:
    input:
        hapf=KG_dir+"impute/ALL.chr{chr}.impute.hap",
        legf=KG_dir+"impute/ALL.chr{chr}.impute.legend",
        mapf=KG_dir+"1000-genomes-genetic-maps/interpolated_hapmap/chr{chr}.interpolated_genetic_map.gz",
        filt_f="EUR.samples"
    params:
        chrom="{chr}"
    output:
        gdsf=KG_dir+"gds/ALL.chr{chr}.gds",
        geno_gdsf=KG_dir+"gds/ALL.chr{chr}_geno.gds"
    script:
        "../scripts/impute_2_seqgds.R"

    
rule vcf_2_impute:
    input:
        vcff=VCF_DIR+"ALL.chr{chr}.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz",
        filt_f="EUR.samples"
    params:
        out_pref=KG_dir+"impute/ALL.chr{chr}"
    output:
        hapf=KG_dir+"impute/ALL.chr{chr}.impute.hap",
        legf=KG_dir+"impute/ALL.chr{chr}.impute.legend"
    shell:
        "vcftools --gzvcf {input.vcff} --IMPUTE --out {params.out_pref} --keep {input.filt_f} --min-alleles 2 --max-alleles 2 --maf 0.05"
             
    
rule vcf_2_gds_all:
    input:
        vcff=expand(VCF_DIR+"ALL.chr{chr}.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz",chr=range(1,23))
    output:
        temp_gds=temp("ALL.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes_seq_hapmap.gds"),
    threads: 10
    script:
        "../scripts/vcf2seq_gds.R"        

rule map_file_RDS:
    input:
        mapf=expand(KG_MAPDIR+"interpolated_from_hapmap/chr{chr}.interpolated_genetic_map.gz",chr=range(1,23))
    output:
        mapf=KG_dir+"1000-genomes-genetic-maps/interpolated_hapmap.RDS"
    script:
        "../scripts/map2RDS.R"
  

        
rule extract_cell_array:
    input:
        filename="genotype.mat"
    output:
        filename="genotype.h5"
    params:
        groupname="snp_info"
    run:
        import h5py
        import numpy as np
        with h5py.File(input.filename,'r') as f:
            data = [ f[element[0]][:] for element in f[params.groupname]]

        with h5py.File(output.filename,'w') as wf:
            for i in range(len(data)):
                wf.create_dataset(params.groupname+'/'+str(i),data[i].shape,data=data[i])



rule vcf_to_hdf5:
    input:
        filename=VCF_DIR+"ALL.chr{chrom}.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz"
    output:
        filename=VCF_DIR+"../hdf5/ALL.chr{chrom}.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.hdf5"
    run:
        import allel
        allel.vcf_to_hdf5(input.filename,output.filename,compression="lzf",compression_opts=None,fields='*')


                

rule train_test_gds:
    input:
        haplo_gdsf=MGDS_DIR+"ALL_seq_hapmap.gds",
        geno_gdsf=MGDS_DIR+"ALL_seq_hapmap_geno.gds"
    params:
        test_frac=test_frac
    output:
        haplo_train=INPUT_DIR+"{trait}_train_haplo.txt",
        haplo_test=INPUT_DIR+"{trait}_test_haplo.txt",
        geno_train=INPUT_DIR+"{trait}_train_geno.txt",
        geno_test=INPUT_DIR+"{trait}_test_geno.txt"
    script:
        "../../scripts/train_test_subset.R"
        


rule all_snpi:
    input:
        haplo_gdsf=MGDS_DIR+"ALL_seq_hapmap.gds",
        geno_gdsf=MGDS_DIR+"ALL_seq_hapmap_geno.gds"
    output:
        traitf=INPUT_DIR+"ALL_ldsc_ex.txt"
    script:
        "../../scripts/ALL_subset.R"
                
rule trait_subset_gds:
    input:
        haplo_gdsf=MGDS_DIR+"ALL_seq_hapmap.gds",
        geno_gdsf=MGDS_DIR+"ALL_seq_hapmap_geno.gds",
        traitf=INPUT_DIR+"{trait}_ldsc_ex.txt"
    output:
        haplo_gdsf=GDS_DIR+"{trait}_seq_hapmap_haplo.gds",
        haplo_hdf5=HDF5_DIR+"{trait}_seq_hapmap_haplo.h5",
        geno_hdf5=HDF5_DIR+"{trait}_seq_hapmap_geno.h5",
        geno_gdsf=GDS_DIR+"{trait}_seq_hapmap_geno.gds",
        snpif=OUTPUT_DIR+"{trait}_snpinfo.RDS",
        snptxtf=OUTPUT_DIR+"{trait}_snpinfo.txt.gz"
    script:
        "../../scripts/trait_subset.R"



        
    
rule trait_subset_gds_tt:
    input:
        gdsf=GDS_DIR+"{trait}_seq_hapmap_{hg}.gds",
        traitf=INPUT_DIR+"{trait}_ldsc_ex.txt",
        tt_traitf=INPUT_DIR+"{trait}_{tt}_{hg}.txt"
    output:
        gdsf=GDS_DIR+"{trait}_seq_{tt}_hapmap_{hg}.gds",
        hdf5f=HDF5_DIR+"{trait}_seq_{tt}_hapmap_{hg}.h5",
    script:
        "../../scripts/trait_subset_tt.R"


rule snp2bed:
    input:
        gdsf=GDS_DIR+"{something}.gds"
    output:
        bedf=GDS_DIR+"../bed/{something}.bed",
        bimf=GDS_DIR+"../bed/{something}.bim",
        famf=GDS_DIR+"../bed/{something}.fam",
    params:
        pref=GDS_DIR+"../bed/{something}"
    script:
        "../../scripts/snp2bed.R"


        
rule trait_LD_regions:
    input:
        gdsf=GDS_DIR+"{trait}_seq_train_hapmap_haplo.gds"
    output:
        unique_f="../{trait}_LD_regions.txt"
    script:
        "../../scripts/LD_regions.R"

rule subset_report:
    input:
        haplo_gdsf_train=GDS_DIR+"{trait}_seq_train_hapmap_haplo.gds",
        haplo_gdsf_test=GDS_DIR+"{trait}_seq_test_hapmap_haplo.gds",
        geno_hdf5_train=HDF5_DIR+"{trait}_seq_train_hapmap_geno.h5",
        geno_hdf5_test=HDF5_DIR+"{trait}_seq_test_hapmap_geno.h5",
        haplo_hdf5_train=HDF5_DIR+"{trait}_seq_train_hapmap_haplo.h5",
        haplo_hdf5_test=HDF5_DIR+"{trait}_seq_test_hapmap_haplo.h5",
        geno_gdsf_train=GDS_DIR+"{trait}_seq_train_hapmap_geno.gds",
        geno_gdsf_test=GDS_DIR+"{trait}_seq_test_hapmap_geno.gds",
        snpif=OUTPUT_DIR+"{trait}_snpinfo.RDS",
        snptxtf=OUTPUT_DIR+"{trait}_snpinfo.txt.gz"
    params:
        traitn="{trait}"
    output:
        reportf="data_reports/{trait}_report.html"
    script:
        "../../scripts/gen_report.Rmd"
        
rule ldsc_chunk:
    input:
        gdsf=rules.subset_gds.output.gdsf
    params:
        chrom="{chrom}",
        outdir=KG_dir+"eur_w_ld_chr"
    output:
        outf=KG_dir+"eur_w_ld_chr/{chrom}.l2.ldscore.gz",
        soutf=KG_dir+"eur_w_ld_chr/{chrom}.l2.M_5_50"#        proff=PROF_DIR+"ldsc_chunk_{chrom}.prof",

    script:
        "../scripts/ldsc_chunk.R"

        
